import { allow } from "../../allow"
import {
  balancer,
  compound_v2,
  curve
} from "../addresses"
import { AVATAR, OMNI_BRIDGE_RECIPIENT_GNOSIS_CHAIN } from "../../placeholders"
import { RolePreset } from "../../types"


const preset = {
  network: 1,
  allow: [

    //---------------------------------------------------------------------------------------------------------------------------------
    // AURA
    //---------------------------------------------------------------------------------------------------------------------------------

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura wstETH/WETH pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: auraB_stETH_STABLE_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.auraB_stETH_stable_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura B-80BAL-20WETH/auraBAL
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: auraB_auraBAL_STABLE_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.auraB_auraBAL_stable_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura rETH/WETH
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: auraB_rETH_STABLE_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.auraB_rETH_stable_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura GNO/WETH
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: auraB_80GNO_20WETH_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.auraB_80GNO_20WETH_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura GNO/COW
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: aura50COW_50GNO_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.aura50COW_50GNO_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura LDO/wstETH
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: aura50WSTETH_50LDO_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.aura50WSTETH_50LDO_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura WETH/AURA
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: aura50WETH_50AURA_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.aura50WETH_50AURA_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura WETH/COW
    //---------------------------------------------------------------------------------------------------------------------------------

    // {
    //   targetAddress: aura50COW_50WETH_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.aura50COW_50WETH_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Staking auraBAL
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claiming auraBAL Staking Rewards
    // {
    //   targetAddress: auraBAL_STAKING_REWARDER,
    //   signature: "getReward()",
    // },
    allow.mainnet.aura.auraBAL_staking_rewarder["getReward()"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Locking AURA
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claiming Locking AURA Rewards
    // {
    //   targetAddress: AURA_LOCKER,
    //   signature: "getReward(address)",
    //   params: {
    //     [0]: staticEqual(AVATAR),
    //   },
    // },
    allow.mainnet.aura.aura_locker["getReward(address)"](
      AVATAR
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Aura - General Rewards Claiming
    //---------------------------------------------------------------------------------------------------------------------------------
    // {
    //   targetAddress: AURA_CLAIM_ZAP,
    //   signature:
    //     "claimRewards(address[],address[],address[],address[],uint256,uint256,uint256,uint256)",
    // },
    allow.mainnet.aura.claim_zap["claimRewards"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // BALANCER
    //---------------------------------------------------------------------------------------------------------------------------------

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer wstETH/WETH pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_stETH_stable_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_stETH_STABLE_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer B-80BAL-20WETH/auraBAL pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_auraBAL_stable_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_auraBAL_STABLE_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer rETH/WETH pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_rETH_stable_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_rETH_STABLE_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer GNO/WETH pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_80GNO_20WETH_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_80GNO_20WETH_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer GNO/COW pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_50COW_50GNO_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_50COW_50GNO_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer LDO/wstETH pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_50WSTETH_50LDO_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_50WSTETH_50LDO_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer WETH/AURA pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_50WETH_50AURA_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_50WETH_50AURA_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer WETH/COW pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.balancer.B_50COW_50WETH_gauge["claim_rewards()"](),

    // Claim BAL Rewards
    allow.mainnet.balancer.BAL_minter["mint"](
      balancer.B_50COW_50WETH_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Balancer BAL/WETH pool
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim locking rewards (single token)
    allow.mainnet.balancer.fee_distributor["claimToken"](
      AVATAR
    ),

    // Claim locking rewards (multiple tokens)
    allow.mainnet.balancer.fee_distributor["claimTokens"](
      AVATAR
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // CONVEX
    //---------------------------------------------------------------------------------------------------------------------------------

    //---------------------------------------------------------------------------------------------------------------------------------
    // Convex - ETH/stETH
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.convex.cvxsteCRV_rewarder["getReward(address,bool)"](
      AVATAR
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Convex - cDAI/cUSDC
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.convex.cvxsteCRV_rewarder["getReward(address,bool)"](
      AVATAR
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Convex - Convert CRV to cvxCRV and Stake cvxCRV
    //---------------------------------------------------------------------------------------------------------------------------------

    // Set Rewards Preferences
    allow.mainnet.convex.stkCvxCrv["setRewardWeight"](),

    // Claim Rewards
    allow.mainnet.convex.stkCvxCrv["getReward(address)"](
      AVATAR
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Convex - Stake CVX
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.convex.cvxRewardPool["getReward(bool)"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Convex - Lock CVX
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim Rewards
    allow.mainnet.convex.vlCVX["getReward(address,bool)"](
      AVATAR
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Convex - General Rewards Claiming
    //---------------------------------------------------------------------------------------------------------------------------------
    allow.mainnet.convex.claim_zap["claimRewards"](),

    //---------------------------------------------------------------------------------------------------------------------------------
    // CURVE
    //---------------------------------------------------------------------------------------------------------------------------------

    //---------------------------------------------------------------------------------------------------------------------------------
    // Curve - ETH/stETH
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim LDO Rewards
    allow.mainnet.curve.steth_eth_gauge["claim_rewards()"](),

    // Claim CRV Rewards
    allow.mainnet.curve.crv_minter["mint"](
      curve.stETH_ETH_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Curve - cDAI/cUSDC
    //---------------------------------------------------------------------------------------------------------------------------------

    // Claim CRV Rewards - This pool gauge does not grant any rewards
    allow.mainnet.curve.crv_minter["mint"](
      curve.cDAIcUSDC_GAUGE
    ),

    //---------------------------------------------------------------------------------------------------------------------------------
    // Compound V2
    //---------------------------------------------------------------------------------------------------------------------------------

    //---------------------------------------------------------------------------------------------------------------------------------
    // Compound V2 - Claiming of rewards
    //---------------------------------------------------------------------------------------------------------------------------------
    allow.mainnet.compound.comptroller["claimComp(address,address[])"](
      AVATAR,
      {
        subsetOf: [compound_v2.cDAI, compound_v2.cUSDC].map((address) => address.toLowerCase()).sort(), // compound app will always pass tokens in ascending order
        restrictOrder: true,
      }
    ),
  ],
  placeholders: { AVATAR },
} satisfies RolePreset

export default preset
